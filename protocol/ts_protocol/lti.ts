/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.15.8
 * source: lti.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export namespace protocol {
    export class LtiAuthClaims extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_id?: string;
            name?: string;
            is_admin?: boolean;
            room_id?: string;
            room_title?: string;
            lti_custom_parameters?: LtiCustomParams;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_id" in data && data.user_id != undefined) {
                    this.user_id = data.user_id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("is_admin" in data && data.is_admin != undefined) {
                    this.is_admin = data.is_admin;
                }
                if ("room_id" in data && data.room_id != undefined) {
                    this.room_id = data.room_id;
                }
                if ("room_title" in data && data.room_title != undefined) {
                    this.room_title = data.room_title;
                }
                if ("lti_custom_parameters" in data && data.lti_custom_parameters != undefined) {
                    this.lti_custom_parameters = data.lti_custom_parameters;
                }
            }
        }
        get user_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set user_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get is_admin() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set is_admin(value: boolean) {
            pb_1.Message.setField(this, 3, value);
        }
        get room_id() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set room_id(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get room_title() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set room_title(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get lti_custom_parameters() {
            return pb_1.Message.getWrapperField(this, LtiCustomParams, 6) as LtiCustomParams;
        }
        set lti_custom_parameters(value: LtiCustomParams) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_lti_custom_parameters() {
            return pb_1.Message.getField(this, 6) != null;
        }
        static fromObject(data: {
            user_id?: string;
            name?: string;
            is_admin?: boolean;
            room_id?: string;
            room_title?: string;
            lti_custom_parameters?: ReturnType<typeof LtiCustomParams.prototype.toObject>;
        }): LtiAuthClaims {
            const message = new LtiAuthClaims({});
            if (data.user_id != null) {
                message.user_id = data.user_id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.is_admin != null) {
                message.is_admin = data.is_admin;
            }
            if (data.room_id != null) {
                message.room_id = data.room_id;
            }
            if (data.room_title != null) {
                message.room_title = data.room_title;
            }
            if (data.lti_custom_parameters != null) {
                message.lti_custom_parameters = LtiCustomParams.fromObject(data.lti_custom_parameters);
            }
            return message;
        }
        toObject() {
            const data: {
                user_id?: string;
                name?: string;
                is_admin?: boolean;
                room_id?: string;
                room_title?: string;
                lti_custom_parameters?: ReturnType<typeof LtiCustomParams.prototype.toObject>;
            } = {};
            if (this.user_id != null) {
                data.user_id = this.user_id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.is_admin != null) {
                data.is_admin = this.is_admin;
            }
            if (this.room_id != null) {
                data.room_id = this.room_id;
            }
            if (this.room_title != null) {
                data.room_title = this.room_title;
            }
            if (this.lti_custom_parameters != null) {
                data.lti_custom_parameters = this.lti_custom_parameters.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_id.length)
                writer.writeString(1, this.user_id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.is_admin != false)
                writer.writeBool(3, this.is_admin);
            if (this.room_id.length)
                writer.writeString(4, this.room_id);
            if (this.room_title.length)
                writer.writeString(5, this.room_title);
            if (this.has_lti_custom_parameters)
                writer.writeMessage(6, this.lti_custom_parameters, () => this.lti_custom_parameters.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LtiAuthClaims {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LtiAuthClaims();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_id = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.is_admin = reader.readBool();
                        break;
                    case 4:
                        message.room_id = reader.readString();
                        break;
                    case 5:
                        message.room_title = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.lti_custom_parameters, () => message.lti_custom_parameters = LtiCustomParams.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): LtiAuthClaims {
            return LtiAuthClaims.deserialize(bytes);
        }
    }
    export class LtiCustomParams extends pb_1.Message {
        #one_of_decls: number[][] = [[1], [2], [3], [4], [5], [6], [7], [8], [9]];
        constructor(data?: any[] | ({
            lti_custom_design?: LtiCustomDesign;
        } & (({
            room_duration?: number;
        }) | ({
            allow_polls?: boolean;
        }) | ({
            allow_shared_note_pad?: boolean;
        }) | ({
            allow_breakout_room?: boolean;
        }) | ({
            allow_recording?: boolean;
        }) | ({
            allow_rtmp?: boolean;
        }) | ({
            allow_view_other_webcams?: boolean;
        }) | ({
            allow_view_other_users_list?: boolean;
        }) | ({
            mute_on_start?: boolean;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("room_duration" in data && data.room_duration != undefined) {
                    this.room_duration = data.room_duration;
                }
                if ("allow_polls" in data && data.allow_polls != undefined) {
                    this.allow_polls = data.allow_polls;
                }
                if ("allow_shared_note_pad" in data && data.allow_shared_note_pad != undefined) {
                    this.allow_shared_note_pad = data.allow_shared_note_pad;
                }
                if ("allow_breakout_room" in data && data.allow_breakout_room != undefined) {
                    this.allow_breakout_room = data.allow_breakout_room;
                }
                if ("allow_recording" in data && data.allow_recording != undefined) {
                    this.allow_recording = data.allow_recording;
                }
                if ("allow_rtmp" in data && data.allow_rtmp != undefined) {
                    this.allow_rtmp = data.allow_rtmp;
                }
                if ("allow_view_other_webcams" in data && data.allow_view_other_webcams != undefined) {
                    this.allow_view_other_webcams = data.allow_view_other_webcams;
                }
                if ("allow_view_other_users_list" in data && data.allow_view_other_users_list != undefined) {
                    this.allow_view_other_users_list = data.allow_view_other_users_list;
                }
                if ("mute_on_start" in data && data.mute_on_start != undefined) {
                    this.mute_on_start = data.mute_on_start;
                }
                if ("lti_custom_design" in data && data.lti_custom_design != undefined) {
                    this.lti_custom_design = data.lti_custom_design;
                }
            }
        }
        get room_duration() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set room_duration(value: number) {
            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);
        }
        get has_room_duration() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get allow_polls() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set allow_polls(value: boolean) {
            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);
        }
        get has_allow_polls() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get allow_shared_note_pad() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set allow_shared_note_pad(value: boolean) {
            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);
        }
        get has_allow_shared_note_pad() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get allow_breakout_room() {
            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
        }
        set allow_breakout_room(value: boolean) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);
        }
        get has_allow_breakout_room() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get allow_recording() {
            return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
        }
        set allow_recording(value: boolean) {
            pb_1.Message.setOneofField(this, 5, this.#one_of_decls[4], value);
        }
        get has_allow_recording() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get allow_rtmp() {
            return pb_1.Message.getFieldWithDefault(this, 6, false) as boolean;
        }
        set allow_rtmp(value: boolean) {
            pb_1.Message.setOneofField(this, 6, this.#one_of_decls[5], value);
        }
        get has_allow_rtmp() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get allow_view_other_webcams() {
            return pb_1.Message.getFieldWithDefault(this, 7, false) as boolean;
        }
        set allow_view_other_webcams(value: boolean) {
            pb_1.Message.setOneofField(this, 7, this.#one_of_decls[6], value);
        }
        get has_allow_view_other_webcams() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get allow_view_other_users_list() {
            return pb_1.Message.getFieldWithDefault(this, 8, false) as boolean;
        }
        set allow_view_other_users_list(value: boolean) {
            pb_1.Message.setOneofField(this, 8, this.#one_of_decls[7], value);
        }
        get has_allow_view_other_users_list() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get mute_on_start() {
            return pb_1.Message.getFieldWithDefault(this, 9, false) as boolean;
        }
        set mute_on_start(value: boolean) {
            pb_1.Message.setOneofField(this, 9, this.#one_of_decls[8], value);
        }
        get has_mute_on_start() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get lti_custom_design() {
            return pb_1.Message.getWrapperField(this, LtiCustomDesign, 10) as LtiCustomDesign;
        }
        set lti_custom_design(value: LtiCustomDesign) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_lti_custom_design() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get _room_duration() {
            const cases: {
                [index: number]: "none" | "room_duration";
            } = {
                0: "none",
                1: "room_duration"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1])];
        }
        get _allow_polls() {
            const cases: {
                [index: number]: "none" | "allow_polls";
            } = {
                0: "none",
                2: "allow_polls"
            };
            return cases[pb_1.Message.computeOneofCase(this, [2])];
        }
        get _allow_shared_note_pad() {
            const cases: {
                [index: number]: "none" | "allow_shared_note_pad";
            } = {
                0: "none",
                3: "allow_shared_note_pad"
            };
            return cases[pb_1.Message.computeOneofCase(this, [3])];
        }
        get _allow_breakout_room() {
            const cases: {
                [index: number]: "none" | "allow_breakout_room";
            } = {
                0: "none",
                4: "allow_breakout_room"
            };
            return cases[pb_1.Message.computeOneofCase(this, [4])];
        }
        get _allow_recording() {
            const cases: {
                [index: number]: "none" | "allow_recording";
            } = {
                0: "none",
                5: "allow_recording"
            };
            return cases[pb_1.Message.computeOneofCase(this, [5])];
        }
        get _allow_rtmp() {
            const cases: {
                [index: number]: "none" | "allow_rtmp";
            } = {
                0: "none",
                6: "allow_rtmp"
            };
            return cases[pb_1.Message.computeOneofCase(this, [6])];
        }
        get _allow_view_other_webcams() {
            const cases: {
                [index: number]: "none" | "allow_view_other_webcams";
            } = {
                0: "none",
                7: "allow_view_other_webcams"
            };
            return cases[pb_1.Message.computeOneofCase(this, [7])];
        }
        get _allow_view_other_users_list() {
            const cases: {
                [index: number]: "none" | "allow_view_other_users_list";
            } = {
                0: "none",
                8: "allow_view_other_users_list"
            };
            return cases[pb_1.Message.computeOneofCase(this, [8])];
        }
        get _mute_on_start() {
            const cases: {
                [index: number]: "none" | "mute_on_start";
            } = {
                0: "none",
                9: "mute_on_start"
            };
            return cases[pb_1.Message.computeOneofCase(this, [9])];
        }
        static fromObject(data: {
            room_duration?: number;
            allow_polls?: boolean;
            allow_shared_note_pad?: boolean;
            allow_breakout_room?: boolean;
            allow_recording?: boolean;
            allow_rtmp?: boolean;
            allow_view_other_webcams?: boolean;
            allow_view_other_users_list?: boolean;
            mute_on_start?: boolean;
            lti_custom_design?: ReturnType<typeof LtiCustomDesign.prototype.toObject>;
        }): LtiCustomParams {
            const message = new LtiCustomParams({});
            if (data.room_duration != null) {
                message.room_duration = data.room_duration;
            }
            if (data.allow_polls != null) {
                message.allow_polls = data.allow_polls;
            }
            if (data.allow_shared_note_pad != null) {
                message.allow_shared_note_pad = data.allow_shared_note_pad;
            }
            if (data.allow_breakout_room != null) {
                message.allow_breakout_room = data.allow_breakout_room;
            }
            if (data.allow_recording != null) {
                message.allow_recording = data.allow_recording;
            }
            if (data.allow_rtmp != null) {
                message.allow_rtmp = data.allow_rtmp;
            }
            if (data.allow_view_other_webcams != null) {
                message.allow_view_other_webcams = data.allow_view_other_webcams;
            }
            if (data.allow_view_other_users_list != null) {
                message.allow_view_other_users_list = data.allow_view_other_users_list;
            }
            if (data.mute_on_start != null) {
                message.mute_on_start = data.mute_on_start;
            }
            if (data.lti_custom_design != null) {
                message.lti_custom_design = LtiCustomDesign.fromObject(data.lti_custom_design);
            }
            return message;
        }
        toObject() {
            const data: {
                room_duration?: number;
                allow_polls?: boolean;
                allow_shared_note_pad?: boolean;
                allow_breakout_room?: boolean;
                allow_recording?: boolean;
                allow_rtmp?: boolean;
                allow_view_other_webcams?: boolean;
                allow_view_other_users_list?: boolean;
                mute_on_start?: boolean;
                lti_custom_design?: ReturnType<typeof LtiCustomDesign.prototype.toObject>;
            } = {};
            if (this.room_duration != null) {
                data.room_duration = this.room_duration;
            }
            if (this.allow_polls != null) {
                data.allow_polls = this.allow_polls;
            }
            if (this.allow_shared_note_pad != null) {
                data.allow_shared_note_pad = this.allow_shared_note_pad;
            }
            if (this.allow_breakout_room != null) {
                data.allow_breakout_room = this.allow_breakout_room;
            }
            if (this.allow_recording != null) {
                data.allow_recording = this.allow_recording;
            }
            if (this.allow_rtmp != null) {
                data.allow_rtmp = this.allow_rtmp;
            }
            if (this.allow_view_other_webcams != null) {
                data.allow_view_other_webcams = this.allow_view_other_webcams;
            }
            if (this.allow_view_other_users_list != null) {
                data.allow_view_other_users_list = this.allow_view_other_users_list;
            }
            if (this.mute_on_start != null) {
                data.mute_on_start = this.mute_on_start;
            }
            if (this.lti_custom_design != null) {
                data.lti_custom_design = this.lti_custom_design.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_room_duration)
                writer.writeUint64(1, this.room_duration);
            if (this.has_allow_polls)
                writer.writeBool(2, this.allow_polls);
            if (this.has_allow_shared_note_pad)
                writer.writeBool(3, this.allow_shared_note_pad);
            if (this.has_allow_breakout_room)
                writer.writeBool(4, this.allow_breakout_room);
            if (this.has_allow_recording)
                writer.writeBool(5, this.allow_recording);
            if (this.has_allow_rtmp)
                writer.writeBool(6, this.allow_rtmp);
            if (this.has_allow_view_other_webcams)
                writer.writeBool(7, this.allow_view_other_webcams);
            if (this.has_allow_view_other_users_list)
                writer.writeBool(8, this.allow_view_other_users_list);
            if (this.has_mute_on_start)
                writer.writeBool(9, this.mute_on_start);
            if (this.has_lti_custom_design)
                writer.writeMessage(10, this.lti_custom_design, () => this.lti_custom_design.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LtiCustomParams {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LtiCustomParams();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.room_duration = reader.readUint64();
                        break;
                    case 2:
                        message.allow_polls = reader.readBool();
                        break;
                    case 3:
                        message.allow_shared_note_pad = reader.readBool();
                        break;
                    case 4:
                        message.allow_breakout_room = reader.readBool();
                        break;
                    case 5:
                        message.allow_recording = reader.readBool();
                        break;
                    case 6:
                        message.allow_rtmp = reader.readBool();
                        break;
                    case 7:
                        message.allow_view_other_webcams = reader.readBool();
                        break;
                    case 8:
                        message.allow_view_other_users_list = reader.readBool();
                        break;
                    case 9:
                        message.mute_on_start = reader.readBool();
                        break;
                    case 10:
                        reader.readMessage(message.lti_custom_design, () => message.lti_custom_design = LtiCustomDesign.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): LtiCustomParams {
            return LtiCustomParams.deserialize(bytes);
        }
    }
    export class LtiCustomDesign extends pb_1.Message {
        #one_of_decls: number[][] = [[1], [2], [3], [4]];
        constructor(data?: any[] | ({} & (({
            primary_color?: string;
        }) | ({
            secondary_color?: string;
        }) | ({
            background_color?: string;
        }) | ({
            custom_logo?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("primary_color" in data && data.primary_color != undefined) {
                    this.primary_color = data.primary_color;
                }
                if ("secondary_color" in data && data.secondary_color != undefined) {
                    this.secondary_color = data.secondary_color;
                }
                if ("background_color" in data && data.background_color != undefined) {
                    this.background_color = data.background_color;
                }
                if ("custom_logo" in data && data.custom_logo != undefined) {
                    this.custom_logo = data.custom_logo;
                }
            }
        }
        get primary_color() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set primary_color(value: string) {
            pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);
        }
        get has_primary_color() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get secondary_color() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set secondary_color(value: string) {
            pb_1.Message.setOneofField(this, 2, this.#one_of_decls[1], value);
        }
        get has_secondary_color() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get background_color() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set background_color(value: string) {
            pb_1.Message.setOneofField(this, 3, this.#one_of_decls[2], value);
        }
        get has_background_color() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get custom_logo() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set custom_logo(value: string) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[3], value);
        }
        get has_custom_logo() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get _primary_color() {
            const cases: {
                [index: number]: "none" | "primary_color";
            } = {
                0: "none",
                1: "primary_color"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1])];
        }
        get _secondary_color() {
            const cases: {
                [index: number]: "none" | "secondary_color";
            } = {
                0: "none",
                2: "secondary_color"
            };
            return cases[pb_1.Message.computeOneofCase(this, [2])];
        }
        get _background_color() {
            const cases: {
                [index: number]: "none" | "background_color";
            } = {
                0: "none",
                3: "background_color"
            };
            return cases[pb_1.Message.computeOneofCase(this, [3])];
        }
        get _custom_logo() {
            const cases: {
                [index: number]: "none" | "custom_logo";
            } = {
                0: "none",
                4: "custom_logo"
            };
            return cases[pb_1.Message.computeOneofCase(this, [4])];
        }
        static fromObject(data: {
            primary_color?: string;
            secondary_color?: string;
            background_color?: string;
            custom_logo?: string;
        }): LtiCustomDesign {
            const message = new LtiCustomDesign({});
            if (data.primary_color != null) {
                message.primary_color = data.primary_color;
            }
            if (data.secondary_color != null) {
                message.secondary_color = data.secondary_color;
            }
            if (data.background_color != null) {
                message.background_color = data.background_color;
            }
            if (data.custom_logo != null) {
                message.custom_logo = data.custom_logo;
            }
            return message;
        }
        toObject() {
            const data: {
                primary_color?: string;
                secondary_color?: string;
                background_color?: string;
                custom_logo?: string;
            } = {};
            if (this.primary_color != null) {
                data.primary_color = this.primary_color;
            }
            if (this.secondary_color != null) {
                data.secondary_color = this.secondary_color;
            }
            if (this.background_color != null) {
                data.background_color = this.background_color;
            }
            if (this.custom_logo != null) {
                data.custom_logo = this.custom_logo;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_primary_color)
                writer.writeString(1, this.primary_color);
            if (this.has_secondary_color)
                writer.writeString(2, this.secondary_color);
            if (this.has_background_color)
                writer.writeString(3, this.background_color);
            if (this.has_custom_logo)
                writer.writeString(4, this.custom_logo);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LtiCustomDesign {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LtiCustomDesign();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.primary_color = reader.readString();
                        break;
                    case 2:
                        message.secondary_color = reader.readString();
                        break;
                    case 3:
                        message.background_color = reader.readString();
                        break;
                    case 4:
                        message.custom_logo = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): LtiCustomDesign {
            return LtiCustomDesign.deserialize(bytes);
        }
    }
}
